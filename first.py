# ===============================
# أمثلة موسعة على حلقات for مع النصوص (Strings)
# ===============================

# ========== المثال 1: التكرار عبر أحرف النص ==========

text = "مرحبا بالعالم"                # تعريف متغير نصي

print("أحرف النص individually:")
for char in text:                     # لكل حرف في النص (char يأخذ قيمة كل حرف على حدة)
    print(char)                       # طباعة الحرف الحالي

# ========== المثال 2: استخدام enumerate للحصول على الفهرس والقيمة ==========

print("أحرف النص مع الفهرس:")
for index, char in enumerate(text):   # enumerate ترجع الفهرس والحرف
    print(f"المؤشر {index}: الحرف '{char}'")  # طباعة الفهرس والحرف

# ========== المثال 3: التكرار مع شرط داخل الحلقة ==========

print("الأحرف التي ليست مسافة:")
for char in text:                     # التكرار عبر كل حرف
    if char != " ":                   # إذا كان الحرف ليس مسافة
        print(char)                   # طباعة الحرف

# ========== المثال 4: عد الأحرف المتشابهة ==========

word = "برمجة"                        # كلمة للبحث
search_char = "م"                     # الحرف المطلوب عده
count = 0                             # عداد لعدد التكرارات

for char in word:                     # التكرار عبر أحرف الكلمة
    if char == search_char:           # إذا كان الحرف يساوي الحرف المطلوب
        count += 1                    # زيادة العداد بمقدار 1

print(f"الحرف '{search_char}' ظهر {count} مرة في '{word}'")

# ========== المثال 5: بناء نص جديد من نص موجود ==========

original_text = "Hello World"         # النص الأصلي
new_text = ""                         # نص جديد فارغ

for char in original_text:            # التكرار عبر كل حرف في النص الأصلي
    if char.isupper():                # إذا كان الحرف كبير (isupper دالة جاهزة)
        new_text += char.lower()      # إضافة الحرف بحروف صغيرة للنص الجديد
    else:
        new_text += char.upper()      # إضافة الحرف بحروف كبيرة للنص الجديد

print(f"النص الأصلي: {original_text}")
print(f"النص المحول: {new_text}")

# ========== المثال 6: تقسيم نص إلى كلمات والتكرار عبرهم ==========

sentence = "بايثون لغة برمجة رائعة"   # جملة نصية
words = sentence.split()              # split تقسيم الجملة إلى كلمات باستخدام

print("كلمات الجملة:")
for word in words:                    # التكرار عبر كل كلمة في القائمة
    print(word)                       # طباعة الكلمة الحالية

# ========== المثال 7: التكرار مع range لمعالجة أحرف النص ==========

text = "أهلًا وسهلًا"                 # نص للعمل عليه

print("أحرف النص باستخدام range:")
for i in range(len(text)):            # len(text) عدد مرات التكرار = طول النص
    print(f"الحرف في الموضع {i} هو: '{text[i]}'")  # text[i] الوصول للحرف باستخدام الفهرس

# ========== المثال 8: عكس النص باستخدام for ==========

original = "بايثون"                   # النص الأصلي
reversed_text = ""                    # نص فارغ للنص المعكوس

for i in range(len(original)-1, -1, -1):  # range بدءاً من آخر حرف إلى الأول
    reversed_text += original[i]      # إضافة الأحرف من الأخير إلى الأول

print(f"النص الأصلي: {original}")
print(f"النص المعكوس: {reversed_text}")

# ========== المثال 9: البحث عن كلمة داخل نص ==========

paragraph = "بايثون لغة برمجة قوية وسهلة التعلم. بايثون مناسبة للمبتدئين والمحترفين."
search_word = "بايثون"                # الكلمة المطلوب البحث عنها
word_count = 0                        # عداد لتكرارات الكلمة

# split تقسيم الفقرة إلى كلمات باستخدام 
for word in paragraph.split():        # التكرار عبر كل كلمة
    if word == search_word:           # إذا كانت الكلمة تساوي كلمة البحث
        word_count += 1               # زيادة العداد

print(f"كلمة '{search_word}' تكررت {word_count} مرة في الفقرة")

# ========== المثال 10: معالجة نص مع استثناءات ==========

text = "PyThOn PrOgRaMmInG"           # نص مزيج من حروف كبيرة وصغيرة
vowels = "aeiouAEIOU"                 # أحرف العلة
result = ""                           # نص للنتيجة

for char in text:                     # التكرار عبر كل حرف
    if char in vowels:                # إذا كان الحرف من أحرف العلة
        result += "*"                 # استبداله بنجمة
    else:
        result += char                # وإلا إضافته كما هو

print(f"النص الأصلي: {text}")
print(f"النص بعد التعديل: {result}")

# ========== المثال 11: استخدام break و continue مع النصوص ==========

text = "مثال على استخدام break و continue"
print("الحروف حتى الوصول لمسافة:")

for char in text:                     # التكرار عبر كل حرف
    if char == " ":                   # إذا كان الحرف مسافة
        break                         # break إيقاف الحلقة باستخدام
    print(char)                       # طباعة الحرف

print("\nجميع الحروف ما عدا 'ا':")
for char in text:                     # التكرار عبر كل حرف
    if char == "ا":                   # إذا كان الحرف 'ا'
        continue                      # continue تخطي هذا التكرار باستخدام
    print(char)                       # طباعة الحرف

# ========== المثال 12: تطبيق عملي - تحليل نص ==========

def analyze_text(input_text):         # دالة لتحليل النص
    """تحليل النص وإحصائياته"""       # وثائق الدالة
    char_count = 0                    # عداد الأحرف
    space_count = 0                   # عداد المسافات
    vowel_count = 0                   # عداد أحرف العلة العربية
    arabic_vowels = "ايو"             # أحرف العلة العربية
    
    for char in input_text:           # التكرار عبر كل حرف في النص
        char_count += 1               # زيادة عداد الأحرف
        if char == " ":               # إذا كان حرف مسافة
            space_count += 1          # زيادة عداد المسافات
        if char in arabic_vowels:     # إذا كان حرف علة
            vowel_count += 1          # زيادة عداد أحرف العلة
    
    # طباعة النتائج
    print(f"تحليل النص: '{input_text}'")
    print(f"عدد الأحرف الكلي: {char_count}")
    print(f"عدد المسافات: {space_count}")
    print(f"عدد أحرف العلة: {vowel_count}")
    print(f"عدد الكلمات: {len(input_text.split())}")

# اختبار الدالة
analyze_text("بايثون لغة برمجة ممتازة")

print("\n" + "="*40)
print("انتهت أمثلة حلقات for مع النصوص")