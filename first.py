# ===============================
# كود مراجعة شامل لبايثون - الأساسيات
# يحتوي على: متغيرات، جمل شرطية، حلقات، دوال، ودوال جاهزة
# ===============================

# ========== الجزء 1: المتغيرات وأنواع البيانات الأساسية ==========

# تعريف متغيرات من أنواع مختلفة
name = "أحمد"                          # متغير نصي (string)
age = 25                               # متغير رقمي صحيح (integer)
height = 175.5                         # متغير رقمي عشري (float)
is_student = True                      # متغير منطقي (boolean)
grades = [85, 90, 78, 92]             # قائمة (list) تخزن عدة قيم
student_info = {"name": "أحمد", "age": 25}  # قاموس (dictionary) لتخزين بيانات مفتاح-قيمة

# ========== الجزء 2: الجمل الشرطية ==========

# if - elif - else بسيط
if age >= 18:                          # إذا كان العمر أكبر أو يساوي 18
    print("أنت بالغ")                  # تطبع هذه الجملة
else:                                  # وإلا
    print("أنت قاصر")                  # تطبع هذه الجملة

# جمل شرطية متعددة الشروط
score = 85
if score >= 90:                        # إذا كانت النتيجة 90 أو أكثر
    print("امتياز")
elif score >= 80:                      # إذا كانت بين 80 و 89
    print("جيد جداً")
elif score >= 70:                      # إذا كانت بين 70 و 79
    print("جيد")
else:                                  # في أي حالة أخرى
    print("مقبول")

# ========== الجزء 3: حلقات التكرار ==========

# حلقة for للتكرار عبر قائمة
print("الدرجات:")
for grade in grades:                   # لكل عنصر في قائمة grades
    print(f"الدرجة: {grade}")         # تطبع قيمة العنصر الحالي

# حلقة for مع range
print("الأرقام من 1 إلى 5:")
for i in range(1, 6):                 # i تأخذ القيم من 1 إلى 5
    print(i)                          # تطبع قيمة i في كل دورة

# حلقة while
counter = 1                           # تهيئة عداد
while counter <= 3:                   # طالما العداد أقل من أو يساوي 3
    print(f"دورة رقم {counter}")      # تطبع رقم الدورة
    counter += 1                      # تزيد قيمة العداد بمقدار 1

# ========== الجزء 4: الدوال ==========

# تعريف دالة بسيطة
def greet(name):                       # تعريف دالة تأخذ معامل واحد
    """هذه الدالة ترحب بالشخص"""       # docstring وثائق الدالة
    return f"مرحباً {name}!"          # إرجاع قيمة نصية

# استدعاء الدالة
message = greet("محمد")               # استدعاء الدالة مع تمرير المعامل
print(message)                        # طباعة الناتج

# دالة بمتغيرات متعددة وقيمة افتراضية
def calculate_rectangle_area(length, width=1):  # دالة بحجمين، الثاني افتراضي
    """تحسب مساحة المستطيل"""         # وثائق الدالة
    area = length * width             # عملية حساب المساحة
    return area                       # إرجاع ناتج العملية الحسابية

# استدعاءات مختلفة للدالة
area1 = calculate_rectangle_area(5, 3)  # تمرير قيمتين
area2 = calculate_rectangle_area(7)     # تمرير قيمة واحدة فقط

# ========== الجزء 5: دوال جاهزة مبنية في بايثون ==========

# دوال النصوص (Strings)
text = "Hello World"
print(len(text))                      # len() تطبع طول النص باستخدام دالة
print(text.upper())                   # upper() تحول النص لحروف كبيرة باستخدام
print(text.lower())                   # lower() تحول النص لحروف صغيرة باستخدام

# دوال القوائم (Lists)
numbers = [3, 1, 4, 1, 5, 9, 2]
numbers.append(6)                     # append() إضافة عنصر جديد نهاية القائمة باستخدام
numbers.sort()                        # sort() ترتيب القائمة تصاعدياً باستخدام
print(numbers)                        # طباعة القائمة بعد التعديلات

# دوال القواميس (Dictionaries)
print(student_info.keys())            # keys() طباعة جميع المفاتيح باستخدام
print(student_info.values())          # values() طباعة جميع القيم باستخدام
student_info.update({"grade": "A"})   # update() إضافة عنصر جديد للقاموس باستخدام

# دوال رياضية
import math                           # استيراد مكتبة الرياضيات
print(math.sqrt(16))                  # sqrt() حساب الجذر التربيعي باستخدام
print(abs(-10))                       # abs() حساب القيمة المطلقة باستخدام
print(round(3.14159, 2))              # round() تقريب العدد لرقمين عشريين باستخدام

# ========== الجزء 6: أمثلة عملية شاملة ==========

# دالة لحساب متوسط القيم في قائمة
def calculate_average(numbers_list):   # تعريف دالة تأخذ قائمة كمعامل
    """تحسب متوسط الأرقام في قائمة"""  # وثائق الدالة
    if len(numbers_list) == 0:         # إذا كانت القائمة فارغة
        return 0                       # إرجاع صفر
    total = sum(numbers_list)          # sum() حساب مجموع الأرقام باستخدام دالة
    average = total / len(numbers_list)  # حساب المتوسط
    return average                     # إرجاع قيمة المتوسط

# اختبار الدالة
test_grades = [85, 90, 78, 92, 88]    # قائمة اختبار
avg = calculate_average(test_grades)   # استدعاء الدالة
print(f"المتوسط: {avg}")              # طباعة الناتج

# مثال شامل يجمع كل المفاهيم
def student_report(name, grades_list):  # دالة تأخذ اسم وقائمة درجات
    """تولد تقريراً عن الطالب"""       # وثائق الدالة
    print(f"تقرير الطالب: {name}")     # طباعة اسم الطالب
    
    # استخدام حلقة for لمعالجة الدرجات
    print("الدرجات الفردية:")
    for i, grade in enumerate(grades_list):  # enumerate() للتكرار مع الفهرس باستخدام
        print(f"المادة {i+1}: {grade}")     # طباعة رقم المادة ودرجتها
    
    # استخدام جمل شرطية لتقييم الأداء
    average = calculate_average(grades_list)  # حساب المتوسط باستخدام الدالة التي عرفناها
    print(f"المتوسط: {average}")      # طباعة المتوسط
    
    if average >= 90:                 # تقييم الأداء بناءً على المتوسط
        print("التقييم: ممتاز")
    elif average >= 80:
        print("التقييم: جيد جداً")
    elif average >= 70:
        print("التقييم: جيد")
    else:
        print("التقييم: يحتاج تحسين")
    
    return average                    # إرجاع قيمة المتوسط

# اختبار الدالة الشاملة
student_grades = [95, 87, 92, 78, 85]
final_avg = student_report("فاطمة", student_grades)  # استدعاء الدالة

print("=" * 30)
print("انتهى برنامج المراجعة")